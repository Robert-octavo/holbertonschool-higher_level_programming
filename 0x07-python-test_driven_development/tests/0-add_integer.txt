============================
The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import the function:
    >>> add_integer = __import__('0-add_integer').add_integer

Test:

    >>> add_integer(2, 4)
    6

    >>> add_integer(2)
    100

    >>> add_integer(1, 9.2)
    10

    >>> add_integer(3, -2)
    1

    >>> add_integer(-3, -4)
    -7

    >>> add_integer(112.0, 4.0)
    116

    >>> add_integer(5, "holberton")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("holberton", 4)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer((1, 1))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3, [])
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(1000e1000)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer("holberton", "school")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer